#!/bin/sh

if uname 2>/dev/null | grep -qv Darwin; then
  exit
fi

# the $1=$1 is to rebuild the record, using the current OFS.
FSM_OUT=$(cvadmin -e fsmlist 2>/dev/null | awk 'BEGIN { FS="\n"; RS="" } !/^ /{next} {gsub(/,/, ""); $1=$1}1')

if [ -n "$FSM_OUT" ]
then
  echo '<<<xsan_fsmlist>>>'
  for fs in "$FSM_OUT"
  do
    echo "$fs"
  done
fi

XSAN_VOLS=$(echo "$FSM_OUT" | sed -n 's/[ |\*]\(.*\)\[[0-9]\].*$/\1/p')
if [ -n "$XSAN_VOLS" ]
then
  echo '<<<xsan_stat>>>'
  for VOL in $XSAN_VOLS
  do
    cvadmin -F $VOL -e stat 2>/dev/null | awk -v VOL=$VOL 'BEGIN { OFS=""; ORS=" "; print VOL } !/^ /{next}  {$1=$1}1'
  	echo
  done
  echo '<<<xsan_show_long>>>'
  for VOL in $XSAN_VOLS
  do
    cvadmin -F $VOL -e show long 2>/dev/null | awk -v VOL=$VOL 'BEGIN { FS="\n"; RS="" } !/^Stripe Group/{next}  {$1=$1; print VOL, $0}'
    echo
  done
fi

PATHS_OUT=$(cvadmin -e paths 2>/dev/null | sed -e '1,/acfs/d')
if [ -n "$PATHS_OUT" ]
then
  echo '<<<xsan_paths>>>'
  echo "$PATHS_OUT"
fi

DISKS_OUT=$(cvadmin -e disks 2>/dev/null | sed -e '1,/acfs/d')
if [ -n "$DISKS_OUT" ]
then
  echo '<<<xsan_disks>>>'
  echo "$DISKS_OUT"
fi
