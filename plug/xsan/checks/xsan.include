# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Jeremy Leggat <jleggat@asu.edu>

### Collect and dump XSAN information.
# from `cvadmin -e fsmlist` will put out:
# fsm	name index port pid ismaster state timestamp launchcount coredumps flags lastadminaction timestamp lastterminationcode timestamp
# For each volume will put out `cvadmin -F Volume -e stat` with:
# stats	volume timestamp activeconnections blocksize devices groups blockstotal blocksfree
# and `cvadmin -F Volume -e show long` with:
# stripe volume	number name status totalblocks reserverblocks freeblocks
# not output with above: multipathmethod primarystripe readenabled writeenbaled
# for paths:
# paths	name device	hba	ctl	lun	state	controller
# for disks:
# disks	name device	sectors	sectorsize

factory_settings["xsan_default_levels"] = {
    "allowed_fsm_states" : ["REGISTERED"],
    "path_not_found_level" : 1,
}

def list_get_next(L, value, v=None):
	if value in L:
		try:
			i = L.index(value) + 1
		except ValueError:
			i = -1 # no match
		if -len(L) <= i < len(L): return L[i]
	else: return v
