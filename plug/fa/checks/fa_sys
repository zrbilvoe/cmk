#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Jeremy Leggat <jleggat@asu.edu>
# --------------------------------------------------------------------------------
# 1. Fibre Alliance base info
# Polls the .1.3.6.1.3.94.1.6 oid, FCMGMT-MIB::connUnitEntry
# "A connectivity unit entry containing objects for a particular unit."

factory_settings["fa_sys_default_levels"] = {
    "allowed_states" : [ "2", ],
    "allowed_status" : [ "3", ],
    "warn_status"    : [ "4", ],
}

fa_sys_statename = { '1': "unknown", '2': "online", '3': "offline" }
fa_sys_statusname = { '1': "unknown", '2': "unused", '3': "ok", '4': "warning", '5': "failed" }

def fa_sys_itemname(id):
    return '.'.join(str(x) for x in (ord(byte) for byte in id))

def inventory_fa_sys(checkname, info):
    inventory = []
    uidlist = []
    for id, ports, state, status, product, sn, url, sensors, unitname in info:
        uid = fa_hex2string(id)
        name = fa_unitid_genitem(uid,uidlist)
        inventory.append((name,{}))
    return inventory

def check_fa_sys(item, params, info):
    uidlist = []
    for id, ports, state, status, product, sn, url, sensors, unitname, in info:
        uid = fa_hex2string(id)
        name = fa_unitid_genitem(uid,uidlist)
        if name != item: continue

        msg_txt = "%s %s, %s ports %s sensors, %s SN#%s" % (unitname, product, ports, sensors, url, sn)
        named_state = fa_sys_statename[state]
        named_status = fa_sys_statusname[status]

        if state in params["allowed_states"] and status in params["allowed_status"]:
            return (0, "OK - as expected %s / %s - %s" % (named_state, named_status, msg_txt))
        elif status in params["warn_status"]:
            return (1, "WARNING - State %s Status %s - %s" % (named_state, named_status, msg_txt))
        else:
            return (2, "CRITICAL - State %s Status %s - %s" % (named_state, named_status, msg_txt))

    return (3, "UNKNOWN - Unit info not found")

check_info["fa_sys"] = {
    "inventory_function"       : inventory_fa_sys,
    "check_function"           : check_fa_sys,
    "has_perfdata"             : False,
    "service_description"      : "FA Chasis %s",
    "default_levels_variable"  : "fa_sys_default_levels",
    "includes"                 : [ "fa.include" ],
}

snmp_info["fa_sys"] = \
    ( ".1.3.6.1.3.94.1.6.1", [
        "1",    # connUnitId
        "4",    # connUnitNumports
        "5",    # connUnitState Values: unknown(1), online(2), offline(3)
        "6",    # connUnitStatus    Values: unknown(1), unused(2), ok(3), warning(4), failed(5)
        "7",    # connUnitProduct
        "8",    # connUnitSn
        "10",   # connUnitUrl
        "14",   # connUnitNumSensors
        "20",   # connUnitName
    ] )

snmp_scan_functions['fa_sys'] = \
    lambda oid: oid(".1.3.6.1.3.94.1.1.0") != None
