#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Jeremy Leggat <jleggat@asu.edu>

factory_settings["sony_srx_default_levels"] = {
    "lifespan" : 1000,
    "average"	: 0,
}

def inventory_sony_srx_lamp(checkname, info):
  return [(line[0], {}) for line in info]

def check_sony_srx_lamp(item, params, info):
  srxinfo = (line for line in info if line[0] == item)
  chk_info = srxinfo.next()

  this_time = time.time()
  lamp_time = saveint(chk_info[2])
  lifespan = int(params["lifespan"])
  timedif, rate = get_counter("sony_srx_lamp_hours.%s" % item, this_time, lamp_time)
  if params["average"] > 0:
    ## Average out lamp usage with 15 min default.
    ## This is seems to be how often the counter updates on system.
    timedif, rate = get_average("sony_srx_lamp_hours.%s_avg" % item, this_time, rate, params["average"])

  perfdata = [ ( "Lamphours", lamp_time, "", lifespan ), ( "Rate", rate ) ]

  model = chk_info[1]
  msg_txt = "%d hours (%d hour Estimated Life Span) on %s bulb" % (lamp_time, lifespan, model)

  if lamp_time > lifespan:
    return (2, "CRITICAL - %s" % msg_txt, perfdata)
  else:
    return (0, "OK - %s" % msg_txt, perfdata)

  return (3, "UNKNOWN - %s info not found" % item)

check_info["sony_srx_lamp"] = {
    "inventory_function"       : inventory_sony_srx_lamp,
    "check_function"           : check_sony_srx_lamp,
    "has_perfdata"             : True,
    "service_description"      : "Lamp %s",
    "default_levels_variable"  : "sony_srx_default_levels",
}

snmp_info["sony_srx_lamp"] = ( ".1.3.6.1.4.1.122.8501.3.109.4.1.1", [ \
  "1",  # index
  "2",  # bulb model
  "3",  # hours
] )

snmp_scan_functions['sony_srx_lamp'] = \
  lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.122.8501")
