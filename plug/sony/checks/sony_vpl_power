#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Jeremy Leggat <jleggat@asu.edu>
# --------------------------------------------------------------------------------

factory_settings["sony_vpl_power_default_levels"] = {
    "run_hours"	: [7, 22],
}

vpl_power_statename = [ "Standby", "Start Up", "Start Up Lamp", "On", "Cooling1", "Saving Cooling1", "Saving Standby" ]
vpl_error_statename = [ "NO ERROR", "LAMP ERROR", "FAN ERROR", "COVER ERROR", "TEMP ERROR", "D5V ERROR", "POWER ERROR", "WARNING ERROR" ]

def inventory_sony_vpl_power(checkname, info):
  if len(info) > 0: return [(None, {})]

def check_sony_vpl_power(item, params, info):
  chk_info = info[0]

  this_hour = time.strftime("%H")

  power = int(chk_info[0])

  perfdata = [ ( "state", power, "", "", 0, 6 ) ]

  msg_txt = vpl_power_statename[power]

  if power in [0, 4, 5, 6]:
    return (0, "%s" % msg_txt, perfdata)

  if params["run_hours"][0] < int(this_hour) < params["run_hours"][1]:
    return (0, "%s" % msg_txt, perfdata)
  else:
    return (1, "%s" % msg_txt, perfdata)

  return (3, "UNKNOWN - data not found")

check_info["sony_vpl_power"] = {
    "inventory_function"       : inventory_sony_vpl_power,
    "check_function"           : check_sony_vpl_power,
    "has_perfdata"             : True,
    "service_description"      : "Power",
    "default_levels_variable"  : "sony_vpl_power_default_levels",
}

snmp_info["sony_vpl_power"] = ( ".1.3.6.1.4.1.122.8501.3.101.3", [ \
  "1", # power {0 => Standby, 1 =>Start Up, 2 =>Start Up Lamp, 3 => On, 4 => Cooling1, 5 => Saving Cooling1, 6=> Saving Standby}
  "3", # {0 => NO ERROR, 1 => LAMP ERROR, 2 => FAN ERROR, 3 => COVER ERROR, 4 => TEMP ERROR, 5 => D5V ERROR, 6 => POWER ERROR, 7 => WARNING ERROR}
] )

snmp_scan_functions['sony_vpl_power'] = \
  lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.122.8501")
